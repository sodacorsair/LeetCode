https://leetcode-cn.com/problems/maximal-square/submissions/

dp[i][j]记录当前坐标下最大正方形边长，则正方形(i - 1, j), (i, j - 1), (i - 1, j - 1)必然有一个限制当前坐标正方形边长。

class Solution {
    public int maximalSquare(char[][] matrix) {
        if (matrix == null || matrix.length == 0 || matrix[0].length == 0) return 0;
        
        int m = matrix.length, n = matrix[0].length, max = 0;
        int[] dp = new int[n];
        for (int i = 0; i < m; i++) {
            int prev = 0;
            for (int j = 0; j < n; j++) {
                int tmp = dp[j];
                if (matrix[i][j] == '1') {
                    dp[j] = j == 0 ? 1 : Math.min(prev, Math.min(dp[j - 1], dp[j])) + 1;
                    max = Math.max(dp[j], max);
                } else {
                    dp[j] = 0;
                }
                prev = tmp;
            }
        }
        
        return max * max;
    }
}
