https://leetcode-cn.com/problems/numbers-with-same-consecutive-differences/submissions/

class Solution {
    public int[] numsSameConsecDiff(int N, int K) {
        if (N == 1) {
            int[] A = new int[10];
            for (int i = 0; i < 10; i++) A[i] = i;
            return A;
        }
        List<List<Integer>> arrs = new ArrayList();
        List<Integer> ans = new ArrayList();
        
        for (int i = 0; i < 10; i++) {
            arrs.add(new ArrayList());
            if (i - K > -1) arrs.get(i).add(i - K);
            if (i + K < 10 && K != 0) arrs.get(i).add(i + K);
        }
        
        for (int i = 1; i < 10; i++) {
            if (!arrs.get(i).isEmpty()) {
                ans.add(i);
            }
        }
        
        for (int i = 2; i <= N; i++) {
            int len = ans.size();
            for (int j = 0; j < len; j++) {
                int last = ans.get(j) % 10;
                int ori = ans.get(j);
                ans.set(j, ori * 10 + arrs.get(last).get(0));
                for (int k = 1; k < arrs.get(last).size(); k++)
                    ans.add(ori * 10 + arrs.get(last).get(k));
            }
        }
        
        int[] arr = new int[ans.size()];
        for (int i = 0; i < arr.length; i++) arr[i] = ans.get(i);
        return arr;
    }
}
