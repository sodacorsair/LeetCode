https://leetcode-cn.com/problems/find-k-pairs-with-smallest-sums/submissions/

解法：首先将nums1前k个数和nums2[0]压入优先队列，每当弹出一对数时，应将数对中当前nums1的数和下一个nums2的数入队，因为这是下一个可能最小的数。

class Solution {
    public List<List<Integer>> kSmallestPairs(int[] nums1, int[] nums2, int k) {
        Arrays.sort(nums1);
        Arrays.sort(nums2);
        List<List<Integer>> ans = new ArrayList();
        if (k == 0 || nums1.length == 0 || nums2.length == 0) return ans;
        
        PriorityQueue<int[]> pq = new PriorityQueue<>((a, b) -> (a[0] + a[1] - b[0] - b[1]));
        for (int i = 0; i < nums1.length && i < k; i++) pq.offer(new int[]{nums1[i], nums2[0], 0});
        for (int i = 0; i < k && !pq.isEmpty(); i++) {
            int[] cur = pq.poll();
            ans.add(new ArrayList<>(Arrays.asList(new Integer[]{cur[0], cur[1]})));
            if (cur[2] == nums2.length - 1) continue;
            pq.offer(new int[]{cur[0], nums2[cur[2] + 1], cur[2] + 1});
        }
        
        return ans;
    }
}
