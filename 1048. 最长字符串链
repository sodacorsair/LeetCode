思路：将字符串按长度从小到大进行排列，然后遍历每个字符串寻找其缺失一个字符的前身字符串是否存在，若在字典中存在取出字链长度加一更新最大值，并将该阶段最大
值保存在字典中。

https://leetcode-cn.com/problems/longest-string-chain/submissions/

class Solution {
    public int longestStrChain(String[] words) {
        Arrays.sort(words, (a, b) -> (a.length() - b.length()));
        Map<String, Integer> dp = new HashMap();
        int res = 0;
        
        for (String word : words) {
            int best = 0;
            for (int i = 0; i < word.length(); i++) {
                String prev = word.substring(0, i) + word.substring(i + 1);
                best = Math.max(best, dp.getOrDefault(prev, 0) + 1);
            }
            dp.put(word, best);
            res = Math.max(best, res);
        }
        
        return res;
    }
}
