思路：太傻B了这题……ArrayList的HashMap来管理推文。

https://leetcode-cn.com/problems/design-twitter/submissions/

class Twitter {
    
    Map<Integer, TreeSet<Integer>> fo;
    Map<Integer, ArrayList<int[]>> posts;
    int time;

    /** Initialize your data structure here. */
    public Twitter() {
        fo = new HashMap();
        posts = new HashMap();
        time = 0;
    }
    
    /** Compose a new tweet. */
    public void postTweet(int userId, int tweetId) {
        posts.computeIfAbsent(userId, k -> new ArrayList()).add(new int[]{time++, tweetId});
    }
    
    /** Retrieve the 10 most recent tweet ids in the user's news feed. Each item in the news feed must be posted by users who the user followed or by the user herself. Tweets must be ordered from most recent to least recent. */
    public List<Integer> getNewsFeed(int userId) {
        List<Integer> news = new ArrayList();
        List<int[]> temp = new ArrayList();
        if (fo.get(userId) != null)
            for (int user : fo.get(userId))
                if (posts.get(user) != null)
                    for (int[] post : posts.get(user))
                        temp.add(post);
        
        if (posts.get(userId) != null)
            for (int[] post : posts.get(userId))
                temp.add(post);
            
        Collections.sort(temp, (a, b) -> (b[0] - a[0]));
        for (int[] t : temp) news.add(t[1]);
        return news.subList(0, news.size() < 10 ? news.size() : 10);
    }
    
    /** Follower follows a followee. If the operation is invalid, it should be a no-op. */
    public void follow(int followerId, int followeeId) {
        if (followerId == followeeId) return;
        fo.computeIfAbsent(followerId, k -> new TreeSet()).add(followeeId);
    }
    
    /** Follower unfollows a followee. If the operation is invalid, it should be a no-op. */
    public void unfollow(int followerId, int followeeId) {
        fo.computeIfAbsent(followerId, k -> new TreeSet()).remove(followeeId);
    }
}

/**
 * Your Twitter object will be instantiated and called as such:
 * Twitter obj = new Twitter();
 * obj.postTweet(userId,tweetId);
 * List<Integer> param_2 = obj.getNewsFeed(userId);
 * obj.follow(followerId,followeeId);
 * obj.unfollow(followerId,followeeId);
 */
